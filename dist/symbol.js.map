{"version":3,"sources":["symbol.js"],"names":["symbol","size","Collection","item","instance","x","console","log","sizeOf","add","array","newArr","i","a","b","union","intersect","Array","filter","has","difference"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAgBA,M,GAAAA,M;;;;AAAT,SAASA,MAAT,GAAkB;AAAA;;AAErB,QAAIC,OAAO,sBAAO,MAAP,CAAX;;AAFqB,QAIfC,UAJe;AAKnB,8BAAc;AAAA;;AACZ,iBAAKD,IAAL,IAAa,CAAb;AACD;;AAPkB;AAAA;AAAA,gCASfE,IATe,EAST;AACR,qBAAK,KAAKF,IAAL,CAAL,IAAmBE,IAAnB;AACA,qBAAKF,IAAL;AACD;AAZkB;AAAA;AAAA,mCAcLG,QAdK,EAcK;AACtB,uBAAOA,SAASH,IAAT,CAAP;AACD;AAhBkB;AAAA;AAAA;;AAmBrB,QAAII,IAAI,IAAIH,UAAJ,EAAR;AACAI,YAAQC,GAAR,CAAYL,WAAWM,MAAX,CAAkBH,CAAlB,CAAZ;;AAEAA,MAAEI,GAAF,CAAM,KAAN;AACAH,YAAQC,GAAR,CAAYL,WAAWM,MAAX,CAAkBH,CAAlB,CAAZ;;AAEAC,YAAQC,GAAR,CAAY,oBAAYF,CAAZ,CAAZ;AACAC,YAAQC,GAAR,CAAY,mCAA2BF,CAA3B,CAAZ;AACAC,YAAQC,GAAR,CAAY,qCAA6BF,CAA7B,CAAZ;;AAGA,QAAMK,QAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,CAAd;AACA,QAAMC,oDAAa,kBAAQD,KAAR,CAAb,EAAN;;AA/BqB;AAAA;AAAA;;AAAA;AAiCrB,wDAAcC,MAAd,4GAAsB;AAAA,gBAAbC,CAAa;;AACpBN,oBAAQC,GAAR,CAAY,eAAeK,CAA3B;AACD;AAnCoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqCrB,QAAIC,IAAI,kBAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAR,CAAR;AACA,QAAIC,IAAI,kBAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAR,CAAR;;AAEA;AACA,QAAIC,QAAQ,6DAAYF,CAAZ,oCAAkBC,CAAlB,GAAZ;AACA,yBAAQP,GAAR,kDAAeQ,KAAf;;AAEA;AACA,QAAIC,YAAY,IAAIC,KAAJ,CAAU,2CAAIJ,CAAJ,GAAOK,MAAP,CAAc;AAAA,eAAKJ,EAAEK,GAAF,CAAMd,CAAN,CAAL;AAAA,KAAd,CAAV,CAAhB;AACA,0BAAQE,GAAR,kBAAeS,SAAf;;AAEA;AACA,QAAII,aAAa,IAAIH,KAAJ,CAAU,2CAAIJ,CAAJ,GAAOK,MAAP,CAAc;AAAA,eAAK,CAACJ,EAAEK,GAAF,CAAMd,CAAN,CAAN;AAAA,KAAd,CAAV,CAAjB;AACA,0BAAQE,GAAR,kBAAea,UAAf;AACH","file":"symbol.js","sourcesContent":["export function symbol() {\r\n    \r\n    let size = Symbol('size');\r\n\r\n    class Collection {\r\n      constructor() {\r\n        this[size] = 0;\r\n      }\r\n\r\n      add(item) {\r\n        this[this[size]] = item;\r\n        this[size]++;\r\n      }\r\n\r\n      static sizeOf(instance) {\r\n        return instance[size];\r\n      }\r\n    }\r\n\r\n    let x = new Collection();\r\n    console.log(Collection.sizeOf(x));\r\n\r\n    x.add('foo');\r\n    console.log(Collection.sizeOf(x));\r\n\r\n    console.log(Object.keys(x));\r\n    console.log(Object.getOwnPropertyNames(x));\r\n    console.log(Object.getOwnPropertySymbols(x));\r\n\r\n\r\n    const array = [5,5,6,6,7,7,7,5,3,2,2];\r\n    const newArr = [...new Set(array)];\r\n\r\n    for (let i of newArr) {\r\n      console.log(\"setArray: \" + i);\r\n    }\r\n\r\n    let a = new Set([1, 2, 3]);\r\n    let b = new Set([4, 3, 2]);\r\n\r\n    // 并集\r\n    let union = new Set([...a, ...b]);\r\n    console.log(...union);\r\n\r\n    // 交集\r\n    let intersect = new Array([...a].filter(x => b.has(x)));\r\n    console.log(...intersect);\r\n\r\n    // 差集\r\n    let difference = new Array([...a].filter(x => !b.has(x)));\r\n    console.log(...difference);\r\n}"],"sourceRoot":"D:\\training\\es6\\es6-demo\\src"}